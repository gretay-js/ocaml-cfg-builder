(**************************************************************************)
(*                                                                        *)
(*                                 OCamlFDO                               *)
(*                                                                        *)
(*                     Greta Yorsh, Jane Street Europe                    *)
(*                                                                        *)
(*   Copyright 2019 Jane Street Group LLC                                 *)
(*                                                                        *)
(*   All rights reserved.  This file is distributed under the terms of    *)
(*   the GNU Lesser General Public License version 2.1, with the          *)
(*   special exception on linking described in the file LICENSE.          *)
(*                                                                        *)
(**************************************************************************)

[@@@ocaml.warning "+a-4-30-40-41-42"]

let add_discriminator dbg file d =
  (* CR-soon gyorsh: discriminators aren't supported yet in debug info
     generated by ocaml compiler. It can be easily added, but for now we use
     line numbers instead, to reduce the number of different compiler changes
     required to make ocamlfdo work. *)
  let pos = { Lexing.dummy_pos with pos_fname = file; pos_lnum = d } in
  let loc = { Location.loc_start = pos; loc_end = pos; loc_ghost = true } in
  let nd = Debuginfo.from_location loc in
  Debuginfo.concat nd dbg

let add t ~file =
  (* CR gyorsh: how to make it forall 'a ? *)
  let update (i : Cfg.basic Cfg.instruction) =
    { i with dbg = add_discriminator i.dbg file i.id }
  in
  let update_t (i : Cfg.terminator Cfg.instruction) =
    { i with dbg = add_discriminator i.dbg file i.id }
  in
  let update_block _ (block : Cfg.basic_block) =
    block.terminator <- update_t block.terminator;
    block.body <- List.map update block.body
  in
  let cfg = Cfg_with_layout.cfg t in
  Label.Tbl.iter update_block cfg.blocks
