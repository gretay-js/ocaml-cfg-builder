(**************************************************************************)
(*                                                                        *)
(*                                 OCamlFDO                               *)
(*                                                                        *)
(*                     Greta Yorsh, Jane Street Europe                    *)
(*                                                                        *)
(*   Copyright 2019 Jane Street Group LLC                                 *)
(*                                                                        *)
(*   All rights reserved.  This file is distributed under the terms of    *)
(*   the GNU Lesser General Public License version 2.1, with the          *)
(*   special exception on linking described in the file LICENSE.          *)
(*                                                                        *)
(**************************************************************************)

[@@@ocaml.warning "+a-4-30-40-41-42"]

let add_discriminator dbg file d =
  (* CR-soon gyorsh: discriminators aren't supported yet in debug info
     generated by ocaml compiler. It can be easily added, but for now we use
     line numbers instead, to reduce the number of different compiler
     changes required to make ocamlfdo work. *)
  let pos = { Lexing.dummy_pos with pos_fname = file; pos_lnum = d; } in
  let loc = { Location.loc_start = pos; loc_end = pos; loc_ghost = true; } in
  let d = Debuginfo.from_location loc in
  Debuginfo.concat d dbg

(* CR mshinwell: See what we can do about this to avoid machine
   dependence.  If it's impossible maybe this should be in a separate
   source file.  Also see next CR below. *)
(* CR-soon gyorsh: This is the only machine dependent part. owee parser
   doesn't know how to handle /% that may appear in a function name, for
   example an Int operator. *)
let to_symbol name =
  let symbol_prefix =
    if X86_proc.system = X86_proc.S_macosx then "_" else ""
  in
  X86_proc.string_of_symbol symbol_prefix name

(* CR mshinwell: We should probably try to move things like this out of
   the ocamlcfg library---I don't think it should contain FDO-specific
   pieces. *)
let linear_ext = ".cmir-linear"

let get_linear_file fun_name = to_symbol fun_name ^ linear_ext